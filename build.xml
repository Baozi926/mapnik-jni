<project name="mapnik_jni" default="all">
	<property name="junit.jar" location="lib/junit-4.8.2.jar"/>

	<target name="compile">
		<mkdir dir="build/classes"/>
		<mkdir dir="csrc"/>
		<javac srcdir="src" destdir="build/classes" debug="on" source="1.5" target="1.5" includeantruntime="false"/>
	</target>
	
	<target name="headers" depends="compile">
		<javah class="mapnik.Parameters,mapnik.Mapnik,mapnik.Map,mapnik.Layer,mapnik.FeatureTypeStyle,mapnik.Datasource,mapnik.DatasourceCache,mapnik.Projection,mapnik.Query,mapnik.FeatureSet,mapnik.Geometry,mapnik.Image,mapnik.Renderer,mapnik.FreetypeEngine" outputfile="csrc/mapnikjni.h" classpath="build/classes"/>
	</target>
	
	<target name="jar" depends="compile">
		<mkdir dir="build/dist"/>
		<jar jarfile="build/dist/mapnik-jni.jar" basedir="build/classes"/>
	</target>
	
	<target name="test" depends="compile">
		<mkdir dir="build/classes-test"/>
		<mkdir dir="build/testresults"/>
		<javac srcdir="test" destdir="build/classes-test" debug="on" source="1.5" target="1.5" includeantruntime="false">
			<classpath>
				<pathelement location="${junit.jar}"/>
				<pathelement location="build/classes"/>
			</classpath>
		</javac>
	
		<junit fork="true" failureproperty="tests.failed" showoutput="false" printsummary="true">
			<jvmarg value="-Djava.library.path=csrc"/>
			<classpath>
				<pathelement location="${junit.jar}"/>
				<pathelement location="build/classes"/>
				<pathelement location="build/classes-test"/>
			</classpath>
			
			<formatter type="plain"/>

			<batchtest todir="build/testresults">
				<fileset dir="build/classes-test">
					<include name="mapnik/Test*.class"/>
					<exclude name="mapnik/TestBase.class"/>
				</fileset>
			</batchtest>
		</junit>
		
		<fail if="tests.failed" message="One or more tests failed"/>
	</target>
	
	<target name="clean">
		<delete dir="build"/>
		<delete dir="csrc">
			<include name="*.jnilib"/>
			<include name="*.so"/>
			<include name="*.dll"/>
		</delete>
	</target>
	
	<target name="native-init">
		<condition property="platform.makefile" value="Makefile.osx">
			<os family="mac"/>
		</condition>
		<condition property="platform.makefile" value="Makefile.linux">
			<os family="unix" name="linux"/>
		</condition>
	</target>
	<target name="native-build" if="platform.makefile">
		<exec dir="csrc" executable="make" failonerror="true">
			<arg value="-f"/>
			<arg value="${platform.makefile}"/>
		</exec>
		<mkdir dir="build/dist"/>
		<copy todir="build/dist">
			<fileset dir="csrc">
				<include name="*.jnilib"/>
				<include name="*.so"/>
			</fileset>
		</copy>
	</target>
	<target name="native" depends="native-init,native-build"/>
	
	<target name="all" depends="jar,native"/>
	<target name="dist" depends="clean,all"/>
</project>